version: 4
shared:
    settings:
        slack: ['resilience-alerts']
    environment:
        # Filename to contain the generated changelog, the default puts the file in the [docs](docs) directory
        # used by the mkdocs utility.
        CHANGELOG_FILENAME: docs/changelog.md
        
        # Documentation tool to use, can be either sphinx which looks for documentation in doc/source
        # or mkdocs which looks for documentation in docs.
        # By default use [mkdocs](https://www.mkdocs.org/) tool to build documentation from the [docs](docs) directory.
        DOCUMENTATION_FORMATS: mkdocs
        SD_COVERAGE_PLUGIN_ENABLED: false

jobs:
    # Validation jobs
    dependency_validation:
        template: python-2104/validate_dependencies
        requires: [~pr, ~commit]

    doc_validation:
         template: python-2104/documentation
         environment:
             DOCUMENTATION_PUBLISH: False
             DOWNGRADE_PKGS: ""
         requires: [~pr]
         steps:
             - postinit: pip install -e .[doc_build]

    lint_validation:
        template: python-2104/validate_lint
        requires: [~pr, ~commit]

    package_validation:
        template: python-2104/package_python
        environment:
            PACKAGE_PYTHON_PUBLISH: False
        requires: [~pr]

    security_validation:
        environment:
            SECURITY_BANDIT_CONFIG_ARGS: "-s B101"
        template: python-2104/validate_security
        requires: [~pr, ~commit]

    # Style validation using `flake8`
    style_validation:
        template: python-2104/validate_style
        requires: [~pr, ~commit]
        steps:
            - validate_code: pypirun flake8 flake8 vzmi/ychaos

    # Code Format Validation using `black`
    code_format_validation:
        template: python-2104/validate_style
        requires: [~pr, ~commit]
        steps:
            - validate_code: pypirun black black --check vzmi/ tests/ setup.py

    test_validation:
        template: python-2104/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            SD_COVERAGE_PLUGIN_ENABLED: true
        requires: [~pr, ~commit]

    type_validation:
        environment:
            PYPIRUN_ARGS: '--upgrade_pip'
        template: python-2104/validate_type
        requires: [~pr, ~commit]

    # Package auto-versioning, this must run before generating a package for publishing
    version:
        template: python-2104/version
        requires: [dependency_validation, lint_validation, style_validation, type_validation, security_validation, test_validation, code_format_validation]

    # Python packaging
    python_package:
        template: python-2104/package_python
        requires: [version]
        steps:
            - posttag_release: python3 screwdriver/label_build.py


    # Application packaging
    # The jobs in this section are configured using the deploy.conf file.

    # By default these don't publish the packages since applications don't generally need all types
    # of packaging.  Uncomment the desired job and change PACKAGE_PUBLISH to True to enable a specific
    # deployment packaging type.

    # docker_package:
    #      template: python-2104/docker_pythonapp
    #      environment:
    #         PACKAGE_PUBLISH: False
    #      requires: [python_package]

    # yinst_rh7_package:
    #     template: python-2104/package_yinst
    #     environment:
    #         PACKAGE_PUBLISH: False
    #     image: docker-registry.ops.yahoo.com:4443/python/ylinux7
    #     requires: [python_package]

    # Before publishing rpm packages, the CI Pipeline will need to be whitelisted to access the
    # specified rpm repository in artifactory.  If this is not done the publish operation will
    # fail with permission errors.

    # rpm_rh7_package:
    #     template: python-2104/package_rpm
    #    image: docker-registry.ops.yahoo.com:4443/python/ylinux7
    #     environment:
    #         PACKAGE_PUBLISH: False
    #     requires: [python_package]

        # Publish sphinx or mkdocs documentation to github pages of this repo

    # Publish sphinx or mkdocs documentation to github pages of this repo
    doc_publish:
        template: python-2104/documentation
        requires: [python_package]
        steps:
            - postinit: pip install -e .[doc_build]
