[metadata]
author = Resilience Team
author_email = resilience-core@verizonmedia.com
classifiers =
    Programming Language :: Python :: 3
description = Python module vzmi.ychaos
long_description = file:README.md
long_description_content_type = text/markdown
name = vzmi.ychaos
project_urls =
    Documentation = https://git.vzbuilders.com/pages/resilience/vzmi.ychaos
    Source = https://git.vzbuilders.com/resilience/vzmi.ychaos
    Changelog = https://git.vzbuilders.com/pages/resilience/vzmi.ychaos/docs/changelog.md
    CI Pipeline = https://screwdriver.ouroath.com/pipelines/1041241/events
url = https://git.vzbuilders.com/resilience/vzmi.ychaos
version = 0.0.0

[options]
namespace_packages =
    vzmi
    
packages =
    vzmi.ychaos

# Add abstract package dependencies here (do not specify specific versions)
# for more information see:
# https://git.vzbuilders.com/pages/developer/python-guide/faq/abstract_vs_concrete_dependencies/
install_requires =
    pydantic==1.8.1
    pyyaml==5.4.1
    requests==2.25.1

# By default new packages require at minimum the current supported Python release.
python_requires = >="3.6"

[options.extras_require]
# Managing Optional Dependencies

# Package dependencies are pinned to a specific version so as to avoid
# any broken releases. The versions that are pinned here are stable versions
# and the ychaos tool is working as expected.

# To update the version, test the tool with the new dependencies
# and raise a commit
chaos =
    rich==9.13.0

agents =
    psutil==5.8.0
    pyOpenSSL==20.0.1

# Additional packages for testing (test step)
test =
    mockito
    jsondiff

    cryptography
    # Optional Dependencies (pinned)

    # chaos
    rich==9.13.0

    #agents
    psutil==5.8.0
    pyOpenSSL==20.0.1

    pytest-timeout

# Additonal packages needed for documentation generation (doc_build/doc_publish steps)
doc_build =
    mkdocs
    mkdocs-material>=7.0.0
    mkdocstrings
    markdown-include
    mkdocs-macros-plugin
    mkdocs-awesome-pages-plugin
    mike

    # Optional Dependencies (pinned)

    #agents
    psutil==5.8.0
    pyOpenSSL==20.0.1

# Additional packages needed for mypy type checking
mypy =

# Additional packages needed for pep8/pycodestyle style checking
pep8 =

# Additional packages needed for pylint code analysis
pylint =

# Debug indicates the requirements that are needed to develop
# this tool on your local machine.
debug =
    # Documentation
    mkdocs
    mkdocs-material>=7.0.0
    mkdocstrings
    mkdocs-macros-plugin
    markdown_include
    mkdocs-awesome-pages-plugin
    json-schema-for-humans
    mike

    # Code Analysis
    flake8
    mypy
    bandit

    # Unittest
    pytest
    pytest-cov
    pytest-timeout
    mockito
    callee
    parameterized
    jsondiff

    # Code Formatting
    isort
    black

    # Optional Dependencies (Pinned)

    # chaos
    rich==9.13.0

    # agents
    psutil==5.8.0
    pyOpenSSL==20.0.1


[options.entry_points]
# Console script entry points are used to create wrapper scripts that run a specific function, the resulting wrapper
# is installed in the bin directory.

# They are defined using the following format:
#    scriptname = modulename:function
console_scripts =
    ychaos=vzmi.ychaos.cli.main:main

[screwdrivercd.version]
# Package versioning plugin/method to use.
# 
# Note:
#    Switching between different plugins can be difficult, since new package numbers need to have a higher
#    major number than previously published packages.  So for example, if the version in the metadata of
#    this file is 0.0.0 (default value) and the version_type below is sdv4_SD_BUILD.  The version generated
#    will be 0.0.build_number.  If the version_type is changed to sdv4_date  the version generated will be
#    year.month.build_number.  If the version_type is then changed badk to the sdv4_SD_BUILD the versions 
#    generated will be again 0.0.build_number which will be a lower version than those generated by the sdv4_date
#    plugin, so installations will always treat the older packages generated by the sdv4_date plugin as newer
#    until the version in this file is updated with a major number (first part) that is higher than the 2 digit year
#    number.
#
#    Essentially this means changing to using the sdv4_date plugin to use date based versions can be done easily, but
#    switching back to the default requires more changes than simply changing the value back.

# These versioners require the CI Pipeline to have an update_version build step that runs before
# any packaging steps.

# Base the autoversion build number on the screwdriver build number
version_type = sdv4_SD_BUILD

# Base the autoversion build number on the current date and the screwdriver build number
# version_type = sdv4_date

[flake8]
ignore = E501,F841,W503, E203
max-complexity = 15

[tool:pytest]
addopts = --no-cov-on-fail
filterwarnings =
    ignore::UserWarning
console_output_style = count
timeout=5

[coverage:run]
source = vzmi.ychaos
branch = True
concurrency =
    thread
    multiprocessing

[coverage:report]
precision = 2
fail_under = 85
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    if TYPE_CHECKING:
    @overload
    pass
